---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"button"> {
  bgColor?: "primary" | "secondary" | "transparent";
  size?: "sm" | "md" | "lg";
  boxShadow?: string;
  animated?: boolean;
  classes?: string;
}

const {
  bgColor = "transparent",
  boxShadow = "none",
  animated = false,
  size = "md",
  classes,
} = Astro.props;
const translate = animated ? "translateY(-2px)" : "translateY(0px)";
const buttonColor =
  bgColor === "primary"
    ? "var(--primary-color)"
    : bgColor === "secondary"
      ? "var(--secondary-color)"
      : "transparent";
---

<button data-size={size} class:list={classes}><slot /></button>

<style define:vars={{ buttonColor, boxShadow, translate }}>
  .hero-btn {
    @media (max-width: 900px) {
      font-size: 1.4rem;
      padding: 1rem 2rem;
    }

    @media (max-width: 600px) {
      font-size: 1.2rem;
      padding: 1rem 2rem;
    }
  }

  button {
    border-radius: 1.5rem;
    padding: 1em 1.5em;
    border: 1px solid #ccc;
    background-color: var(--buttonColor);
    box-shadow: var(--boxShadow);
    font-weight: 600;
    font-family: "Nunito Sans", sans-serif;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.2s;

    &:hover {
      transform: var(--translate);
    }
  }

  .btn-primary {
    background-color: var(--primary-color);
    color: #fff;
  }

  .btn-secondary {
    background-color: var(--secondary-color);
    color: #fff;
  }

  .hv-primary:hover {
    background-color: var(--primary-color);
    color: #fff;
  }
  .hv-secondary:hover {
    background-color: var(--secondary-color);
    color: #fff;
  }

  [data-size="sm"] {
    font-size: 1.2rem;
  }
  [data-size="md"] {
    font-size: 1.4rem;
  }
  [data-size="lg"] {
    font-size: 1.8rem;
  }
</style>
